/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "dma.h"
#include "spi.h"
#include "gpio.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include "u8g2.h"
/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
static u8g2_t u8g2;
/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/

/* USER CODE BEGIN PV */

/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
uint8_t u8x8_stm32_gpio_and_delay(U8X8_UNUSED u8x8_t *u8x8,
    U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int,
    U8X8_UNUSED void *arg_ptr)
{
  switch (msg)
  {
  case U8X8_MSG_GPIO_AND_DELAY_INIT:
    HAL_Delay(1);
    break;
  case U8X8_MSG_DELAY_MILLI:
    HAL_Delay(arg_int);
    break;
  case U8X8_MSG_GPIO_DC:
    HAL_GPIO_WritePin(D_C_GPIO_Port, D_C_Pin, arg_int);
    break;
  case U8X8_MSG_GPIO_RESET:
    HAL_GPIO_WritePin(OLED_RES_GPIO_Port, OLED_RES_Pin, arg_int);
    break;
  }
  return 1;
}

uint8_t u8x8_byte_4wire_hw_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int,
    void *arg_ptr)
{
  switch (msg)
  {
  case U8X8_MSG_BYTE_SEND:
    HAL_SPI_Transmit(&hspi2, (uint8_t *) arg_ptr, arg_int, 10000);
    break;
  case U8X8_MSG_BYTE_INIT:
    break;
  case U8X8_MSG_BYTE_SET_DC:
    HAL_GPIO_WritePin(D_C_GPIO_Port, D_C_Pin, arg_int);
    break;
  case U8X8_MSG_BYTE_START_TRANSFER:
    break;
  case U8X8_MSG_BYTE_END_TRANSFER:
    break;
  default:
    return 0;
  }
  return 1;
}

//void draw(uint8_t pos)
//{
//  u8g_SetFont(&u8g, u8g_font_unifont);
//  u8g_DrawStr(&u8g,  0, 12+pos, "Hello World!");
//}

#define logo51_width 243
#define logo51_height 48
static unsigned char logo51_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x86, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7,
   0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x63, 0x04, 0x00, 0x3e, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xc0, 0x31, 0x0e, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x18, 0x07, 0x80, 0x0f,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x70, 0x8c, 0x03, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xc6, 0x01,
   0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x1c, 0xe3, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e,
   0x71, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x38, 0x00, 0x7c, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0xff, 0x01,
   0x00, 0x00, 0x80, 0x01, 0xc0, 0x81, 0x01, 0x00, 0x03, 0xf0, 0x3f, 0x00,
   0x80, 0x63, 0x9c, 0x01, 0x3e, 0x00, 0x00, 0x00, 0xff, 0x0f, 0xfc, 0xff,
   0x01, 0xfc, 0x3f, 0x00, 0xf8, 0xff, 0x03, 0xff, 0xff, 0x83, 0x01, 0xc0,
   0x81, 0x01, 0x00, 0x03, 0xf8, 0x7f, 0x00, 0xc0, 0x31, 0xce, 0x01, 0x1f,
   0x00, 0x00, 0xc0, 0xff, 0x0f, 0xfe, 0xff, 0x01, 0x0e, 0x70, 0x00, 0x1c,
   0x00, 0x07, 0xff, 0xff, 0x83, 0x01, 0xe0, 0x81, 0x01, 0x00, 0x03, 0x1c,
   0xe0, 0x00, 0xe0, 0x18, 0xe7, 0x80, 0x0f, 0x00, 0x00, 0xc0, 0x00, 0x00,
   0x06, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x80,
   0x01, 0xf0, 0x81, 0x01, 0x00, 0x03, 0x0e, 0xc0, 0x01, 0x40, 0x8c, 0x73,
   0xc0, 0x07, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x80, 0x01, 0x80,
   0x01, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x01, 0xf0, 0x81, 0x01, 0x00,
   0x03, 0x07, 0x80, 0x03, 0x00, 0xc6, 0x39, 0xe0, 0x03, 0x00, 0x00, 0x60,
   0x00, 0x00, 0x03, 0x00, 0xc0, 0x01, 0x00, 0x03, 0x06, 0x00, 0x0c, 0x00,
   0x03, 0x80, 0x01, 0xb8, 0x81, 0x01, 0x80, 0x01, 0x03, 0x00, 0x03, 0x00,
   0xe3, 0x1c, 0xf0, 0x01, 0x00, 0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0xc0,
   0x00, 0x00, 0x03, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x01, 0x98, 0x81,
   0x01, 0x80, 0x81, 0x01, 0x00, 0x07, 0x80, 0x71, 0x0e, 0xf8, 0x00, 0x00,
   0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x06, 0x06, 0x00,
   0x0c, 0x00, 0x03, 0x80, 0x01, 0x8c, 0x81, 0x01, 0xc0, 0x81, 0x01, 0x00,
   0x06, 0xc0, 0x38, 0x07, 0x7c, 0x00, 0x10, 0x00, 0x60, 0x00, 0x00, 0x03,
   0x00, 0x60, 0x00, 0x00, 0x06, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x01,
   0x8e, 0x81, 0x01, 0xe0, 0x80, 0x01, 0x00, 0x00, 0x60, 0x9c, 0x73, 0x3e,
   0x00, 0x0c, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x06,
   0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x01, 0x86, 0x81, 0x01, 0x60, 0x80,
   0x01, 0x00, 0x00, 0x30, 0xce, 0x39, 0x1f, 0x00, 0x48, 0x01, 0x60, 0x00,
   0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x06, 0x06, 0x00, 0x0c, 0x00, 0x03,
   0x80, 0x01, 0x83, 0x81, 0x01, 0x38, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xe7,
   0x9c, 0x0f, 0x18, 0x46, 0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00,
   0x00, 0x0c, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x01, 0x83, 0x81, 0x01,
   0x1f, 0xc0, 0x00, 0x00, 0x00, 0x80, 0x73, 0xce, 0x07, 0x0c, 0x61, 0x00,
   0x60, 0x00, 0x00, 0xff, 0xff, 0x60, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x0c,
   0x00, 0x03, 0x80, 0x81, 0x81, 0x81, 0xff, 0x3f, 0xc0, 0x00, 0x00, 0x00,
   0xc0, 0x39, 0xe7, 0x03, 0xc2, 0x28, 0x00, 0x60, 0x00, 0x00, 0xff, 0xff,
   0x60, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0xc1, 0x81,
   0x81, 0x7f, 0x78, 0xc0, 0x00, 0x00, 0x00, 0xe0, 0x9c, 0xf3, 0x09, 0xc3,
   0x08, 0x02, 0x60, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x0c, 0x06,
   0x00, 0x0c, 0x00, 0x03, 0x80, 0xc1, 0x80, 0x81, 0x01, 0xe0, 0xc0, 0x00,
   0x00, 0x00, 0x70, 0xce, 0xf9, 0x8c, 0x31, 0x8a, 0x01, 0x60, 0x00, 0x00,
   0x03, 0x00, 0x60, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80,
   0xe1, 0x80, 0x81, 0x01, 0xc0, 0xc0, 0x01, 0x00, 0x00, 0x20, 0xe7, 0x7c,
   0xc4, 0x20, 0x86, 0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00,
   0x06, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x71, 0x80, 0x81, 0x01, 0xc0,
   0xc1, 0x01, 0x00, 0x00, 0x80, 0x73, 0x3e, 0x63, 0x1c, 0x61, 0x00, 0x60,
   0x00, 0x00, 0x03, 0x00, 0xe0, 0x00, 0x00, 0x06, 0x06, 0x00, 0x0c, 0x00,
   0x03, 0x80, 0x31, 0x80, 0x81, 0x01, 0x80, 0x81, 0x01, 0x00, 0x06, 0xc0,
   0x39, 0x9f, 0x31, 0x84, 0x21, 0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0xc0,
   0x00, 0x00, 0x07, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x39, 0x80, 0x81,
   0x01, 0x80, 0x81, 0x01, 0x00, 0x06, 0xc0, 0x9c, 0xcf, 0x18, 0x63, 0x18,
   0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x03, 0x06, 0x00,
   0x0c, 0x00, 0x03, 0x80, 0x19, 0x80, 0x81, 0x01, 0x00, 0x83, 0x01, 0x00,
   0x07, 0x00, 0xce, 0x67, 0x0c, 0x63, 0x88, 0x00, 0x60, 0x00, 0x00, 0x03,
   0x00, 0xc0, 0x01, 0x00, 0x03, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x0d,
   0x80, 0x81, 0x01, 0x00, 0x83, 0x03, 0x00, 0x03, 0x00, 0xe7, 0x33, 0xc6,
   0x28, 0x46, 0x01, 0x60, 0x00, 0x00, 0x07, 0x00, 0x80, 0x03, 0x80, 0x01,
   0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x0f, 0x80, 0x81, 0x01, 0x00, 0x03,
   0x07, 0x80, 0x03, 0x00, 0xf3, 0x19, 0xc3, 0x18, 0x45, 0x00, 0x60, 0x00,
   0x00, 0x06, 0x00, 0x00, 0x07, 0xc0, 0x01, 0x06, 0x00, 0x0c, 0x00, 0x03,
   0x80, 0x07, 0x80, 0x81, 0x01, 0x00, 0x03, 0x0e, 0xc0, 0x01, 0x00, 0xf9,
   0x8c, 0x31, 0x8c, 0x31, 0x00, 0x60, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x0e,
   0xf0, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x07, 0x80, 0x81, 0x01,
   0x00, 0x03, 0x1c, 0xe0, 0x00, 0x00, 0x7c, 0xc6, 0x30, 0x85, 0x30, 0x00,
   0x60, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xfc, 0x3f, 0x00, 0x06, 0x00, 0x0c,
   0x00, 0x03, 0x80, 0x03, 0x80, 0x81, 0x01, 0x00, 0x03, 0xf8, 0x7f, 0x00,
   0x00, 0x3e, 0x63, 0x0c, 0x63, 0x0c, 0x00, 0x60, 0x00, 0x00, 0xf0, 0xff,
   0x01, 0xf0, 0x0f, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x03, 0x80, 0x03, 0x80,
   0x81, 0x01, 0x00, 0x03, 0xe0, 0x1f, 0x00, 0x00, 0x9f, 0x31, 0x8c, 0x61,
   0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0xcf, 0x18, 0xe3, 0x18, 0x05, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x67, 0x0e,
   0x53, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xe0, 0x23, 0xc6, 0x30, 0xc6, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
   0x01, 0xc3, 0x18, 0xc5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x31, 0x8e, 0x31, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x7c, 0x00, 0x30, 0x86, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x08, 0x63,
   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x1f, 0x00, 0x80, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_DMA_Init();
  MX_SPI1_Init();
  MX_SPI2_Init();
  /* USER CODE BEGIN 2 */
  HAL_Delay(200);
  u8g2_Setup_ssd1322_nhd_256x64_1(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi,
        u8x8_stm32_gpio_and_delay);
    u8g2_InitDisplay(&u8g2);
    u8g2_SetPowerSave(&u8g2, 0);

//    u8g2_ClearDisplay(&u8g2);
//    u8g2_ClearBuffer(&u8g2);
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  u8g2_FirstPage(&u8g2);
	      do
	      {
	    	  u8g2_DrawXBMP(&u8g2, 8, 0, logo51_width, logo51_height, &logo51_bits);
	    	  u8g2_SetFont(&u8g2, u8g2_font_ncenB10_te);
	    	  u8g2_DrawStr(&u8g2, 100, 60, "Loading . ");

	      } while (u8g2_NextPage(&u8g2));
	      HAL_Delay(500);
	      do
	      {
	      	   u8g2_DrawStr(&u8g2, 100, 60, "Loading . . ");
	      } while (u8g2_NextPage(&u8g2));
	      HAL_Delay(500);
	      do
	      {
	    	  u8g2_DrawStr(&u8g2, 100, 60, "Loading . . . ");
	      } while (u8g2_NextPage(&u8g2));
	      HAL_Delay(500);


    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 336;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 7;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
  {
    Error_Handler();
  }
}

/* USER CODE BEGIN 4 */


void CircleTest(){

}



/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{ 
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
